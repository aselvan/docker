#
# Dockerfile.openjdk11-full
#
# This builds full version docker image of openjdk11 (using slim-buster base)
#
# Build:
#   docker build --rm -t docker.pkg.github.com/aselvan/docker/openjdk:11-full -f ./Dockerfile.openjdk11-full .
#
# Push:
#   cat ~/.git_docker_token |docker login docker.pkg.github.com -u aselvan --password-stdin
#   docker push docker.pkg.github.com/aselvan/docker/openjdk:11-full
#
# Test:
#   test the java vm w/ following command after build (it should print VM flags and version)
#   docker run --rm -it docker.pkg.github.com/aselvan/docker/openjdk:11-full java -XX:+PrintFlagsFinal -version
#
# Author:  Arul Selvan
# Version: Aug Jun 12, 2021
#

# base image w/ full JDK
FROM openjdk:11-jdk-slim-buster
LABEL net.selvans.image.author="Arul Selvan <github@selvans.net>"
LABEL net.selvans.image.maintainer="Arul Selvan <github@selvans.net>"
LABEL net.selvans.image.description="full openjdk11 slim buster based image"
LABEL net.selvans.image.url="https://github.com/aselvan/docker"
LABEL net.selvans.image.version="1.0"
LABEL net.selvans.image.alpine.version="3.13"
LABEL net.selvans.image.openjdk.version="11"
LABEL net.selvans.image.license="MIT License"

ENV JAVA_HOME=/usr/local/openjdk-11
ENV PATH="/usr/local/openjdk-11/bin:$PATH"

# install basic tools we may need on the vanila image
RUN apt-get update && apt-get install -y tzdata netcat-openbsd dnsutils curl \
  && rm -rf /var/lib/apt/lists/*

# TODO: edit the following lines to run your java app

# 1. add your java application, jars, libs, resources, dependencies etc here.
#ADD /path/to/yourapp.jar /home/yourapp.jar

# 2. start your application
#CMD ["java", "--add-opens","java.base/java.lang=ALL-UNNAMED","-jar", "/home/yourapp.jar"]
